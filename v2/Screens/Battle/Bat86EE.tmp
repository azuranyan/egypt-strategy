[gd_scene load_steps=12 format=3 uid="uid://dy2jg0e1iws2m"]

[ext_resource type="Script" path="res://Screens/Battle/Battle.gd" id="1_nfufl"]
[ext_resource type="Script" path="res://StateMachine.gd" id="2_ox1f2"]

[sub_resource type="GDScript" id="GDScript_wxbqf"]
script/source = "extends State

# Idle state

# we're just waiting for the load_map signal
"

[sub_resource type="GDScript" id="GDScript_52mns"]
script/source = "extends State

# Init state

var battle: Battle

func enter(kwargs := {}) -> void:
	battle = kwargs.battle
	
	# initialize context
	var context = Battle.Context.new()
	context.attacker = kwargs.attacker
	context.defender = kwargs.defender
	context.territory = kwargs.territory
	context.result = Battle.Result.Cancelled
	context.turns = 0
	context.current_turn = context.attacker
	
	battle.context = context
	
	# load territory map
	battle.load_map(\"res://Screens/Battle/maps/StartingZone.tscn\")
	
	# emit signal
	battle.battle_started.emit(context.attacker, context.defender, context.territory)
	
	# if defender is ai, allow them to set first
	var prep_queue := []
	if !context.defender.is_player_owned() and context.attacker.is_player_owned():
		prep_queue.append(context.defender)
		prep_queue.append(context.attacker)
	else:
		prep_queue.append(context.attacker)
		prep_queue.append(context.defender)
	
	# start prep phase
	state_machine.transition_to(\"Prep\", {battle=battle, prep_queue=prep_queue})
"

[sub_resource type="GDScript" id="GDScript_jipoe"]
script/source = "extends State

# Prep state

var battle: Battle

var prep_queue: Array = []
var prep: Empire

@onready var ui := $UI

func handle_input(event: InputEvent) -> void:
	pass

func update(delta: float) -> void:
	pass
	
func physics_update(delta: float) -> void:
	pass
	
func enter(kwargs := {}) -> void:
	battle = kwargs.battle
	prep_queue.append_array(kwargs.prep_queue)
	
	prep = prep_queue.pop_front()
	if !prep.is_player_owned():
		auto_fill_slots()
		done()
	else:
		ui.visible = true
		
func auto_fill_slots() -> void:
	# units = all_qualified_units_in_empire
	# fill_required_slots(units)
	# fill_slots(units)
	pass

func done() -> void:
	if prep_queue.is_empty():
		state_machine.transition_to(\"TurnEval\", {battle=battle})
	else:
		state_machine.transition_to(\"Prep\", {battle=battle, prep_queue=prep_queue})

func exit() -> void:
	ui.visible = false
	prep = null
	prep_queue.clear()
		
func _update_ui() -> void:
	ui.get_node(\"PrepQueue\").text = \"Prep Queue: %s\" % prep_queue
	ui.get_node(\"Prep\").text = \"Prep: %s\" % prep
	
"

[sub_resource type="LabelSettings" id="LabelSettings_ehb1b"]
font_size = 30

[sub_resource type="GDScript" id="GDScript_18fha"]
script/source = "extends State

# TurnEval state
"

[sub_resource type="GDScript" id="GDScript_t4niq"]
script/source = "extends State

# PlayerAction state
"

[sub_resource type="GDScript" id="GDScript_nu43r"]
script/source = "extends State

# AIAction state
"

[sub_resource type="GDScript" id="GDScript_gihxl"]
script/source = "extends State

# End state
"

[sub_resource type="LabelSettings" id="LabelSettings_6nd0a"]
font_size = 30

[node name="Battle" type="SubViewportContainer"]
y_sort_enabled = true
script = ExtResource("1_nfufl")

[node name="States" type="Node" parent="."]
script = ExtResource("2_ox1f2")
initial_state = NodePath("Idle")

[node name="Idle" type="Node" parent="States"]
script = SubResource("GDScript_wxbqf")

[node name="Init" type="Node" parent="States"]
script = SubResource("GDScript_52mns")

[node name="Prep" type="Node" parent="States"]
script = SubResource("GDScript_jipoe")

[node name="UI" type="Node2D" parent="States/Prep"]
visible = false
position = Vector2(58, 79)
metadata/_edit_group_ = true

[node name="PrepQueue" type="Label" parent="States/Prep/UI"]
offset_right = 40.0
offset_bottom = 23.0
text = "Prep Queue: ..."
label_settings = SubResource("LabelSettings_ehb1b")

[node name="Prep" type="Label" parent="States/Prep/UI"]
offset_top = 45.0
offset_right = 100.0
offset_bottom = 71.0
text = "Prep: %s"

[node name="TurnEval" type="Node" parent="States"]
script = SubResource("GDScript_18fha")

[node name="PlayerAction" type="Node" parent="States"]
script = SubResource("GDScript_t4niq")

[node name="AIAction" type="Node" parent="States"]
script = SubResource("GDScript_nu43r")

[node name="End" type="Node" parent="States"]
script = SubResource("GDScript_gihxl")

[node name="Viewport" type="SubViewport" parent="."]
disable_3d = true
handle_input_locally = false
canvas_cull_mask = 4294966783
size = Vector2i(1920, 1080)
render_target_update_mode = 4

[node name="UI" type="CanvasLayer" parent="."]
layer = 5
visible = false

[node name="Label" type="Label" parent="UI"]
offset_left = 146.0
offset_top = 738.0
offset_right = 186.0
offset_bottom = 761.0
text = "Tile: Tree1
x = %s
y = %s"
metadata/_edit_use_anchors_ = true

[node name="OnTurn" type="Label" parent="UI"]
offset_left = 58.0
offset_top = 79.0
offset_right = 152.0
offset_bottom = 105.0
text = "on_turn: %s"

[node name="TurnNumber" type="Label" parent="UI"]
offset_left = 37.0
offset_top = 34.0
offset_right = 77.0
offset_bottom = 57.0
text = "Turn %s"
label_settings = SubResource("LabelSettings_6nd0a")
