##########################################################################################################
## to implement
##########################################################################################################
"All Avatars except Lysandra have the exact same stats as their friendly versions. However; they gain stats equivalent to 1 level of Bond when they win a territory, not to exceed the max of 3. They do not get the 2nd Skill from this."



## minor
ui elements need to be canvaslayer to bypass camera and viewport transforms
prep uses global coords to bypass camera problems
prep keyboard control
should behavior really need to be on unittype (ai behavior)
mark units with something when they have taken turn (E) in disgaea
more robust cast animation system
attack shape rotation is rotated 90 degrees
clearly determine program flow of signal connections
 - to connect_defer or to defer the signal emit, etc
overworld buttons need to be double clicked when clicked
unit states in unit so we're not fiddling with stupid states and stuff
 - this also allows us to set unit on ghost or standby but keep its original position, so we can un-standby
 - can path and other stuff can also be implemented there, idgaf now
 - allows pathing over dead bodies
 - add x and y offset

## would be nice
add pause while showing player banner
disgaea style enum targetable units in attack range
disgaea style target and caster placement 
damage counter for consecutive attacks
allow scrolling on character list
Globals empires, territories -> empire, territory
feature affect_caster (effect is used on the caster instead of target)
 - modify z series of effects (i.e. effects that affect caster)
ugly cell() casting because of round: don't apply 0.5 to world and let map object center themselves
AttackEffect.get_animation() -> get_target_special_effect() or something else, as animation is specifically animation strings



##########################################################################################################
## hot list
##########################################################################################################

choppy fadeout transition after going out from battle

add check for bond level up after turn ends

unit -> unitid, so it doesn't rely on unit names and multiple unit types can be spawned

before every effect, check if target is still alive
 - after turn cycle ends, clear all dead units
 - maybe status effect bug is related to unit dying and getting cleared

ui being shown in battle signal is wrong
 - some parts of the ui are player specific but will be shown even for ai

for manager classes, context/state are variables needed to resume a saved game
 - the rest of the variables are assumed to be transient and runtime only

prep
 - drag and drop broken
prep
 - error when exiting battle (keeping state and holding onto stale variable that's already freed) @handle_input @selected
 - above error does not exist when battle is removed from the tree to stop input from propagating
